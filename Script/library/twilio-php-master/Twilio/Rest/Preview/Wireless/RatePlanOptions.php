<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest\Preview\Wireless;

use Twilio\Options;
use Twilio\Values;

abstract class RatePlanOptions {
    /**
     * @param string $uniqueName The unique_name
     * @param string $friendlyName The friendly_name
     * @param string $roaming The roaming
     * @param integer $dataLimit The data_limit
     * @param string $dataMetering The data_metering
     * @param boolean $commandsEnabled The commands_enabled
     * @param string $renewal The renewal
     * @return CreateRatePlanOptions Options builder
     */
    public static function create($uniqueName = Values::NONE, $friendlyName = Values::NONE, $roaming = Values::NONE, $dataLimit = Values::NONE, $dataMetering = Values::NONE, $commandsEnabled = Values::NONE, $renewal = Values::NONE) {
        return new CreateRatePlanOptions($uniqueName, $friendlyName, $roaming, $dataLimit, $dataMetering, $commandsEnabled, $renewal);
    }

    /**
     * @param string $uniqueName The unique_name
     * @param string $friendlyName The friendly_name
     * @return UpdateRatePlanOptions Options builder
     */
    public static function update($uniqueName = Values::NONE, $friendlyName = Values::NONE) {
        return new UpdateRatePlanOptions($uniqueName, $friendlyName);
    }
}

class CreateRatePlanOptions extends Options {
    /**
     * @param string $uniqueName The unique_name
     * @param string $friendlyName The friendly_name
     * @param string $roaming The roaming
     * @param integer $dataLimit The data_limit
     * @param string $dataMetering The data_metering
     * @param boolean $commandsEnabled The commands_enabled
     * @param string $renewal The renewal
     */
    public function __construct($uniqueName = Values::NONE, $friendlyName = Values::NONE, $roaming = Values::NONE, $dataLimit = Values::NONE, $dataMetering = Values::NONE, $commandsEnabled = Values::NONE, $renewal = Values::NONE) {
        $this->options['uniqueName'] = $uniqueName;
        $this->options['friendlyName'] = $friendlyName;
        $this->options['roaming'] = $roaming;
        $this->options['dataLimit'] = $dataLimit;
        $this->options['dataMetering'] = $dataMetering;
        $this->options['commandsEnabled'] = $commandsEnabled;
        $this->options['renewal'] = $renewal;
    }

    /**
     * The unique_name
     * 
     * @param string $uniqueName The unique_name
     * @return $this Fluent Builder
     */
    public function setUniqueName($uniqueName) {
        $this->options['uniqueName'] = $uniqueName;
        return $this;
    }

    /**
     * The friendly_name
     * 
     * @param string $friendlyName The friendly_name
     * @return $this Fluent Builder
     */
    public function setFriendlyName($friendlyName) {
        $this->options['friendlyName'] = $friendlyName;
        return $this;
    }

    /**
     * The roaming
     * 
     * @param string $roaming The roaming
     * @return $this Fluent Builder
     */
    public function setRoaming($roaming) {
        $this->options['roaming'] = $roaming;
        return $this;
    }

    /**
     * The data_limit
     * 
     * @param integer $dataLimit The data_limit
     * @return $this Fluent Builder
     */
    public function setDataLimit($dataLimit) {
        $this->options['dataLimit'] = $dataLimit;
        return $this;
    }

    /**
     * The data_metering
     * 
     * @param string $dataMetering The data_metering
     * @return $this Fluent Builder
     */
    public function setDataMetering($dataMetering) {
        $this->options['dataMetering'] = $dataMetering;
        return $this;
    }

    /**
     * The commands_enabled
     * 
     * @param boolean $commandsEnabled The commands_enabled
     * @return $this Fluent Builder
     */
    public function setCommandsEnabled($commandsEnabled) {
        $this->options['commandsEnabled'] = $commandsEnabled;
        return $this;
    }

    /**
     * The renewal
     * 
     * @param string $renewal The renewal
     * @return $this Fluent Builder
     */
    public function setRenewal($renewal) {
        $this->options['renewal'] = $renewal;
        return $this;
    }

    /**
     * Provide a friendly representation
     * 
     * @return string Machine friendly representation
     */
    public function __toString() {
        $options = array();
        foreach ($this->options as $key => $value) {
            if ($value != Values::NONE) {
                $options[] = "$key=$value";
            }
        }
        return '[Twilio.Preview.Wireless.CreateRatePlanOptions ' . implode(' ', $options) . ']';
    }
}

class UpdateRatePlanOptions extends Options {
    /**
     * @param string $uniqueName The unique_name
     * @param string $friendlyName The friendly_name
     */
    public function __construct($uniqueName = Values::NONE, $friendlyName = Values::NONE) {
        $this->options['uniqueName'] = $uniqueName;
        $this->options['friendlyName'] = $friendlyName;
    }

    /**
     * The unique_name
     * 
     * @param string $uniqueName The unique_name
     * @return $this Fluent Builder
     */
    public function setUniqueName($uniqueName) {
        $this->options['uniqueName'] = $uniqueName;
        return $this;
    }

    /**
     * The friendly_name
     * 
     * @param string $friendlyName The friendly_name
     * @return $this Fluent Builder
     */
    public function setFriendlyName($friendlyName) {
        $this->options['friendlyName'] = $friendlyName;
        return $this;
    }

    /**
     * Provide a friendly representation
     * 
     * @return string Machine friendly representation
     */
    public function __toString() {
        $options = array();
        foreach ($this->options as $key => $value) {
            if ($value != Values::NONE) {
                $options[] = "$key=$value";
            }
        }
        return '[Twilio.Preview.Wireless.UpdateRatePlanOptions ' . implode(' ', $options) . ']';
    }
}